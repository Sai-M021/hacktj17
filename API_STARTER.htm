<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0072)file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/API_STARTER.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!-- Generated by javadoc (1.8.0_121) on Sun Mar 26 01:16:13 EDT 2017 -->

<title>API_STARTER</title>
<meta name="date" content="2017-03-26">
<link rel="stylesheet" type="text/css" href="file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/stylesheet.css" title="Style">
<script type="text/javascript" src="./API_STARTER_files/script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="API_STARTER";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
&lt;div&gt;JavaScript is disabled on your browser.&lt;/div&gt;
</noscript>
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<h2 title="Class API_STARTER" class="title">Class API_STARTER</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>API_STARTER</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">API_STARTER</span>
extends <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></pre>
<div class="block">This API is designed to be a simple and easy tool that beginners can use to get started, we have simplified Java for you
allowing you to easily get off the ground. You will be able to print, and do various other simple functions using this
API. Enjoy!</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tbody><tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/API_STARTER.html#API_STARTER--">API_STARTER</a></span>()</code>&nbsp;</td>
</tr>
</tbody></table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tbody><tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/API_STARTER.html#add-double-double-">add</a></span>(double&nbsp;a,
   double&nbsp;b)</code>
<div class="block">You can use the add method to add two double values together, it works just like the other method, however, this adds
doubles</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/API_STARTER.html#add-int-int-">add</a></span>(int&nbsp;a,
   int&nbsp;b)</code>
<div class="block">You can use the add method to add two values together, make sure you put in two arguements though (an arguement are 
specific number that you pass like add(2,3) would return a value of 5 and print it on the Console I/O this method only
adds integers, for doubles, look for the other add method</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/API_STARTER.html#divide-double-double-">divide</a></span>(double&nbsp;a,
      double&nbsp;b)</code>
<div class="block">This method is the divide method for dividing doubles</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/API_STARTER.html#divide-int-int-">divide</a></span>(int&nbsp;a,
      int&nbsp;b)</code>
<div class="block">This method is the divide method, we will divide two integer values for you, even if the integer values are negative
you can use this in this fashion divide(4,2) = 4/2 = 2, Have Fun!</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/API_STARTER.html#mulitply-double-double-">mulitply</a></span>(double&nbsp;a,
        double&nbsp;b)</code>
<div class="block">This method is for mulitplying two double values and keep in mind, we can still muliply negatives</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/API_STARTER.html#mulitply-int-int-">mulitply</a></span>(int&nbsp;a,
        int&nbsp;b)</code>
<div class="block">This method is the mulitply method, we can multiply two numbers using the two arguement that the user (you) pass
for example, muliply(2,3) would print out 6 for you, we can also multiply negatives Note: we are workin with integer 
values</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/API_STARTER.html#power-double-double-">power</a></span>(double&nbsp;a,
     double&nbsp;b)</code>
<div class="block">This method is the power method, you can raise any number to any power, just enter the number first then the power you
want to raise it by, Enjoy! This only accepts double values so if you want to input 2^2 then put in power(2.0, 2.0);</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/API_STARTER.html#print-double-">print</a></span>(double&nbsp;d)</code>
<div class="block">This method prints anything you want out on the console I/O and accomplishes the same thing as the other print methods
however this prints out an double value, the difference between a double and an integer is that an integer is
something like 17 while a double would be something like 17.0 or 17.8</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/API_STARTER.html#print-int-">print</a></span>(int&nbsp;i)</code>
<div class="block">This method prints anything you want out on the console I/O and accomplishes the same thing as the other print methods
however this prints out an integer value</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/API_STARTER.html#print-java.lang.String-">print</a></span>(<a href="http://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;s)</code>
<div class="block">This method prints anything you want out on the console I/O, you can usually access this in the Run I/O section of your
IDE (the place you are coding in) the console also prints out any errors that you may get in your code, use our Code-0-
Matic to fix any erros you get along the way</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/API_STARTER.html#root-double-double-">root</a></span>(double&nbsp;a,
    double&nbsp;b)</code>
<div class="block">This method is the root method, you can find any root of any number easily, and it will print to the console as well
to find the square root of 4 type in root(4, 2) this also only accepts double arguments so 4 would be 4.0</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/API_STARTER.html#subtract-double-double-">subtract</a></span>(double&nbsp;a,
        double&nbsp;b)</code>
<div class="block">This subtract method subtracts double values in the same fashion as the other subtract function (a function and method
are the same thing</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="file:///Users/saimanchikalapati/.grasp_settings/doc_tmp/API_STARTER.html#subtract-int-int-">subtract</a></span>(int&nbsp;a,
        int&nbsp;b)</code>
<div class="block">The subtract method acts just like the add method, however, the subtract method subracts two numbers, be careful
the subtract method subtracts the second arguement from the first arguement, meaning that subtract(4,2) = 4 - 2 = 2
this method only deals with integer values</div>
</td>
</tr>
</tbody></table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#clone--" title="class or interface in java.lang">clone</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#equals-java.lang.Object-" title="class or interface in java.lang">equals</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#finalize--" title="class or interface in java.lang">finalize</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#getClass--" title="class or interface in java.lang">getClass</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#hashCode--" title="class or interface in java.lang">hashCode</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notify--" title="class or interface in java.lang">notify</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#notifyAll--" title="class or interface in java.lang">notifyAll</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#toString--" title="class or interface in java.lang">toString</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait--" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait-long-" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#wait-long-int-" title="class or interface in java.lang">wait</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="API_STARTER--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>API_STARTER</h4>
<pre>public&nbsp;API_STARTER()</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="print-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>print</h4>
<pre>public&nbsp;void&nbsp;print(<a href="http://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;s)</pre>
<div class="block">This method prints anything you want out on the console I/O, you can usually access this in the Run I/O section of your
IDE (the place you are coding in) the console also prints out any errors that you may get in your code, use our Code-0-
Matic to fix any erros you get along the way</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>s</code> - String to print</dd>
</dl>
</li>
</ul>
<a name="print-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>print</h4>
<pre>public&nbsp;void&nbsp;print(int&nbsp;i)</pre>
<div class="block">This method prints anything you want out on the console I/O and accomplishes the same thing as the other print methods
however this prints out an integer value</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>i</code> - Integer to print</dd>
</dl>
</li>
</ul>
<a name="print-double-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>print</h4>
<pre>public&nbsp;void&nbsp;print(double&nbsp;d)</pre>
<div class="block">This method prints anything you want out on the console I/O and accomplishes the same thing as the other print methods
however this prints out an double value, the difference between a double and an integer is that an integer is
something like 17 while a double would be something like 17.0 or 17.8</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>d</code> - Double to print</dd>
</dl>
</li>
</ul>
<a name="add-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>add</h4>
<pre>public&nbsp;void&nbsp;add(int&nbsp;a,
                int&nbsp;b)</pre>
<div class="block">You can use the add method to add two values together, make sure you put in two arguements though (an arguement are 
specific number that you pass like add(2,3) would return a value of 5 and print it on the Console I/O this method only
adds integers, for doubles, look for the other add method</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - first number</dd>
<dd><code>b</code> - second number</dd>
</dl>
</li>
</ul>
<a name="add-double-double-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>add</h4>
<pre>public&nbsp;void&nbsp;add(double&nbsp;a,
                double&nbsp;b)</pre>
<div class="block">You can use the add method to add two double values together, it works just like the other method, however, this adds
doubles</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - first double</dd>
<dd><code>b</code> - second double</dd>
</dl>
</li>
</ul>
<a name="subtract-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>subtract</h4>
<pre>public&nbsp;void&nbsp;subtract(int&nbsp;a,
                     int&nbsp;b)</pre>
<div class="block">The subtract method acts just like the add method, however, the subtract method subracts two numbers, be careful
the subtract method subtracts the second arguement from the first arguement, meaning that subtract(4,2) = 4 - 2 = 2
this method only deals with integer values</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - first number (subtract from)</dd>
<dd><code>b</code> - second number (amount to subtract)</dd>
</dl>
</li>
</ul>
<a name="subtract-double-double-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>subtract</h4>
<pre>public&nbsp;void&nbsp;subtract(double&nbsp;a,
                     double&nbsp;b)</pre>
<div class="block">This subtract method subtracts double values in the same fashion as the other subtract function (a function and method
are the same thing</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - first double (subtract from)</dd>
<dd><code>b</code> - second double (amount to subtract)</dd>
</dl>
</li>
</ul>
<a name="mulitply-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mulitply</h4>
<pre>public&nbsp;void&nbsp;mulitply(int&nbsp;a,
                     int&nbsp;b)</pre>
<div class="block">This method is the mulitply method, we can multiply two numbers using the two arguement that the user (you) pass
for example, muliply(2,3) would print out 6 for you, we can also multiply negatives Note: we are workin with integer 
values</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - first number to mulitply</dd>
<dd><code>b</code> - second number to mulitply</dd>
</dl>
</li>
</ul>
<a name="mulitply-double-double-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mulitply</h4>
<pre>public&nbsp;void&nbsp;mulitply(double&nbsp;a,
                     double&nbsp;b)</pre>
<div class="block">This method is for mulitplying two double values and keep in mind, we can still muliply negatives</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - first double to multiply</dd>
<dd><code>b</code> - second double to multiply</dd>
</dl>
</li>
</ul>
<a name="divide-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>divide</h4>
<pre>public&nbsp;void&nbsp;divide(int&nbsp;a,
                   int&nbsp;b)</pre>
<div class="block">This method is the divide method, we will divide two integer values for you, even if the integer values are negative
you can use this in this fashion divide(4,2) = 4/2 = 2, Have Fun!</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - dividend</dd>
<dd><code>b</code> - divisor</dd>
</dl>
</li>
</ul>
<a name="divide-double-double-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>divide</h4>
<pre>public&nbsp;void&nbsp;divide(double&nbsp;a,
                   double&nbsp;b)</pre>
<div class="block">This method is the divide method for dividing doubles</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - dividend</dd>
<dd><code>b</code> - divisor</dd>
</dl>
</li>
</ul>
<a name="power-double-double-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>power</h4>
<pre>public&nbsp;void&nbsp;power(double&nbsp;a,
                  double&nbsp;b)</pre>
<div class="block">This method is the power method, you can raise any number to any power, just enter the number first then the power you
want to raise it by, Enjoy! This only accepts double values so if you want to input 2^2 then put in power(2.0, 2.0);</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - number</dd>
<dd><code>b</code> - power</dd>
</dl>
</li>
</ul>
<a name="root-double-double-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>root</h4>
<pre>public&nbsp;void&nbsp;root(double&nbsp;a,
                 double&nbsp;b)</pre>
<div class="block">This method is the root method, you can find any root of any number easily, and it will print to the console as well
to find the square root of 4 type in root(4, 2) this also only accepts double arguments so 4 would be 4.0</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>a</code> - number to root</dd>
<dd><code>b</code> - root amount</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->


</body></html>